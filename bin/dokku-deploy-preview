#!/usr/bin/env sh

set -e

if [ -n "$PLUGIN_REVIEW_APP_NAME" ]; then
  export REVIEW_APP_NAME="$PLUGIN_REVIEW_APP_NAME"
fi

function list_apps {
  ${DOKKU_CMD} apps:report || echo
}

function ensure_app {
  local app_name=${1}
  local exists=$(does_app_exist ${app_name})
  if [ "${exists}" -eq 0 ]; then
    log-info "Preview deployment ${app_name} will be created"
    create_app ${app_name}
  else
    log-info "Preview deployment ${app_name} already created"
  fi
}

function does_app_exist {
  ${DOKKU_CMD} apps:exists ${1} >/dev/null 2>&1 || echo 0
}

function create_app {
  ${DOKKU_CMD} apps:create ${1}
}

function enable_letsencrypt {
  local app_name=${1}
  local exists=$(is_letsencrypt_enabled ${app_name})
  if [ "${exists}" -eq 1 ]; then
    log-info "Let's Encrypt for ${app_name} will be created"
    ${DOKKU_CMD} config:set --no-restart $app_name DOKKU_LETSENCRYPT_EMAIL=${LETSENCRYPT_EMAIL}
    ${DOKKU_CMD} letsencrypt:enable $app_name
  else
    log-info "Let's Encrypt for ${app_name} already created"
  fi
}

function is_letsencrypt_enabled {
  ${DOKKU_CMD} letsencrypt:active ${1} >/dev/null 2>&1 || echo 0
}

setup-ssh

log-info "Creating Dokku preview deployment"

ssh_port=$(parse-ssh-port)
ssh_host=$(parse-ssh-host)

DOKKU_CMD="ssh -p $ssh_port dokku@$ssh_host"

app_name="$(parse-app-name)"
commit_sha="$(parse-ci-commit)"
ssh_remote="ssh://dokku@$(parse-ssh-host):$(parse-ssh-port)"

list_apps

ensure_app ${REVIEW_APP_NAME}

log-info "Pushing to Dokku host"

if [ -n "$REVIEW_APP_NAME" ] && [ "$app_name" != "$REVIEW_APP_NAME" ]; then
  GIT_REMOTE_URL="${GIT_REMOTE_URL%"/$app_name"}/${REVIEW_APP_NAME}"
fi

if [ -n "$CUSTOM_DOCKERFILE_LOCATION" ]; then
  ${DOKKU_CMD} builder-dockerfile:set $REVIEW_APP_NAME dockerfile-path $CUSTOM_DOCKERFILE_LOCATION
fi

# This is to circumvent "fatal: unsafe repository ('/github/workspace' is owned by someone else)"
chown root: /github/workspace

# shellcheck disable=SC2086
git push $GIT_PUSH_FLAGS "$GIT_REMOTE_URL" "$commit_sha:refs/heads/$BRANCH" || echo "Already up-to-date"
# TODO Set app config
# TODO Check for require plugin
## TODO Create services
## TODO Link services
# TODO Deploy application
# TODO Check for Letsencrypt plugin

if [ -n "$PORT_MAPPING" ]; then
  ${DOKKU_CMD} proxy:ports-set $REVIEW_APP_NAME $PORT_MAPPING
fi

if [ -n "$LETSENCRYPT_EMAIL" ]; then
  enable_letsencrypt ${REVIEW_APP_NAME}
fi

