#!/usr/bin/env sh

if [ -n "$PLUGIN_REVIEW_APP_NAME" ]; then
  export REVIEW_APP_NAME="$PLUGIN_REVIEW_APP_NAME"
fi

function list_apps {
  ${DOKKU_CMD} apps:report
}

function ensure_app {
  local app_name=${1}
  does_app_exist ${app_name}
  local exists=$?
  if [ "${exists}" -eq 0 ]; then
    log-info "Preview deployment ${app_name} already created"
  else
    log-info "Preview deployment ${app_name} will be created"
    create_app ${app_name}
  fi
}

function does_app_exist {
  ${DOKKU_CMD} apps:exists ${1} >/dev/null 2>&1
}

function create_app {
  ${DOKKU_CMD} apps:create ${1}
}

setup-ssh

log-info "Creating Dokku preview deployment"

ssh_port=$(parse-ssh-port)
ssh_host=$(parse-ssh-host)

DOKKU_CMD="ssh -p $ssh_port dokku@$ssh_host"

app_name="$(parse-app-name)"
commit_sha="$(parse-ci-commit)"
ssh_remote="ssh://dokku@$(parse-ssh-host):$(parse-ssh-port)"

list_apps

ensure_app ${REVIEW_APP_NAME}

log-info "Pushing to Dokku host"

if [ -n "$REVIEW_APP_NAME" ] && [ "$app_name" != "$REVIEW_APP_NAME" ]; then
  GIT_REMOTE_URL="${GIT_REMOTE_URL%"/$app_name"}/${REVIEW_APP_NAME}"
fi

chown root: /github/workspace

# shellcheck disable=SC2086
git push $GIT_PUSH_FLAGS "$GIT_REMOTE_URL" "$commit_sha:refs/heads/$BRANCH"

# TODO Set app config
# TODO Check for require plugin
## TODO Create services
## TODO Link services
# TODO Deploy application
# TODO Check for Letsencrypt plugin
## TODO Enable Letsencrypt

